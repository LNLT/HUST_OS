[root@localhost ~]# cat /proc/6873/stat
6873 (a.out) R 6723 6873 6723 34819 6873 8388608 77 0 0 0 41958 31 0 0 25 0 3 0 5882654 1409024 56 4294967295 134512640 134513720 3215579040 0 2097798 0 0 0 0 0 0 0 17 0 0 0 [root@localhost ~]#
每个参数意思为：
参数 解释
pid=6873 进程(包括轻量级进程，即线程)号

comm=a.out 应用程序或命令的名字
task_state=R 任务的状态，R:runnign, S:sleeping (TASK_INTERRUPTIBLE), D:disk sleep (TASK_UNINTERRUPTIBLE), T:stopped, T:tracing stop,Z:zombie, X:dead
ppid=6723 父进程ID

pgid=6873 线程组号
sid=6723 c该任务所在的会话组ID
tty_nr=34819(pts/3) 该任务的tty终端的设备号，INT（34817/256）=主设备号，（34817-主设备号）=次设备号
tty_pgrp=6873 终端的进程组号，当前运行在该任务所在终端的前台任务(包括shell 应用程序)的PID。
task->flags=8388608 进程标志位，查看该任务的特性
min_flt=77 该任务不需要从硬盘拷数据而发生的缺页（次缺页）的次数
cmin_flt=0 累计的该任务的所有的waited-for进程曾经发生的次缺页的次数目
maj_flt=0 该任务需要从硬盘拷数据而发生的缺页（主缺页）的次数
cmaj_flt=0 累计的该任务的所有的waited-for进程曾经发生的主缺页的次数目
utime=41958 该任务在用户态运行的时间，单位为jiffies
stime=31 该任务在核心态运行的时间，单位为jiffies
cutime=0 累计的该任务的所有的waited-for进程曾经在用户态运行的时间，单位为jiffies
cstime=0 累计的该任务的所有的waited-for进程曾经在核心态运行的时间，单位为jiffies

priority=25 任务的动态优先级

nice=0 任务的静态优先级
num_threads=3 该任务所在的线程组里线程的个数
it_real_value=0 由于计时间隔导致的下一个 SIGALRM 发送进程的时延，以 jiffy 为单位.
start_time=5882654 该任务启动的时间，单位为jiffies

vsize=1409024（page） 该任务的虚拟地址空间大小

rss=56(page) 该任务当前驻留物理地址空间的大小
Number of pages the process has in real memory,minu 3 for administrative purpose.这些页可能用于代码，数据和栈。
rlim=4294967295（bytes） 该任务能驻留物理地址空间的最大值
start_code=134512640 该任务在虚拟地址空间的代码段的起始地址
end_code=134513720 该任务在虚拟地址空间的代码段的结束地址
start_stack=3215579040 该任务在虚拟地址空间的栈的结束地址
kstkesp=0 esp(32 位堆栈指针) 的当前值, 与在进程的内核堆栈页得到的一致.
kstkeip=2097798 指向将要执行的指令的指针, EIP(32 位指令指针)的当前值.
pendingsig=0 待处理信号的位图，记录发送给进程的普通信号
block_sig=0 阻塞信号的位图
sigign=0 忽略的信号的位图
sigcatch=082985 被俘获的信号的位图
wchan=0 如果该进程是睡眠状态，该值给出调度的调用点
nswap 被swapped的页数，当前没用
cnswap 所有子进程被swapped的页数的和，当前没用
exit_signal=17 该进程结束时，向父进程所发送的信号
task_cpu(task)=0 运行在哪个CPU上
task_rt_priority=0 实时进程的相对优先级别
task_policy=0 进程的调度策略，0=非实时进程，1=FIFO实时进程；2=RR实时进程  



/proc/uptime
第一列输出的是，系统启动到现在的时间（以秒为单位），这里简记为num1；
第二列输出的是，系统空闲的时间（以秒为单位）,这里简记为num2。
系统的空闲率(%) = num2/(num1*N) 其中N是SMP系统中的CPU个数。

/proc/version
代替/proc/sys/kernel/ostype,/proc/sys/kernel/osrelease


/proc/stat
Shell
name  user  nice  system  idle  iowait  irq  siftirq  steal  guest  guest_nice
cpu  173474 11540 728603 34347223 6175 0 277 0 0 0
cpu0 122740 11499 357388 8162872 5017 0 267 0 0 0
cpu1 17674 23 159784 8680820 737 0 10 0 0 0
cpu2 16369 8 106948 8752058 301 0 0 0 0 0
cpu3 16690 9 104482 8751471 120 0 0 0 0 0
    name：指示CPU核
    user：用户态花费的时间
    nice：nice值为负的进程在用户态所占用的CPU时间
    system：内核态占用的CPU时间
    idle：空闲时间
    iowait：磁盘IO等待的时间
    irq：硬中断占用的时间
    softirq：软中断占用的时间
    steal：如果当前系统运行在虚拟化环境中，则可能会有时间片运行在操作系统上，这个值指的是运行其他操作系统花费的时间
    guest：操作系统运行虚拟CPU花费的时间
    guest_nice：运行一个带nice值的guest花费的时间

intr：系统启动以来发生的所有中断的次数的总和
ctxt: 自系统启动以来CPU发生的上下文交换的次数
btime：表示系统自1970以来，已经运行了的时间，单位为s
processes：系统启动后所创建过的进程数量。当短时间该值特别大，系统可能出现异常
procs_running：处于Runnable状态的进程个数
procs_blocked：处于等待I/O完成的进程个数
softirq: 表示从系统启动以来的软中断计数，第一列表示所有软中断的总和；之后各列表示某个指定软中断的数量。

总的Cpu使用率计算
计算方法：
1、采样两个足够短的时间间隔的Cpu快照，分别记作t1,t2，其中t1、t2的结构均为：
(user、nice、system、idle、iowait、irq、softirq、stealstolen、guest)的9元组;
2、  计算总的Cpu时间片totalCpuTime
a)把第一次的所有cpu使用情况求和，得到s1;
b)把第二次的所有cpu使用情况求和，得到s2;
c)s2 - s1得到这个时间间隔内的所有时间片，即totalCpuTime = j2 - j1 ;
3、计算
user=第二次的第一列 - 第一次的第一列
system=第二次的第三列 - 第一次的第三列
6、计算cpu使用率
pcpu =100* (user+system)/total


/proc/meminfo
MemTotal：总内存
MemFree：空闲内存
MemAvailable：可用内存

Buffers：给文件的缓冲大小
Cached：高速缓冲存储器
SwapCached：被高速缓冲存储用的交换空间的大小
Active：活跃使用中的高速缓冲存储器页面文件大小
Inactive：不经常使用中的告诉缓冲存储器文件大小
active(anon)：活跃的匿名内存（进程中堆上分配的内存,是用malloc分配的内存）
Inactive(anon)：不活跃的匿名内存
file内存：磁盘高速缓存的内存空间和“文件映射(将物理磁盘上的文件内容与用户进程的逻辑地址直接关联)”的内存空间，其中的内容与物理磁盘上的文件相对应
Active(file)：活跃的file内存
Inactive(file)：不活跃的file内存
Unevictable：不能被释放的内存页
Mlocked：mlock()系统调用锁定的内存大小

SwapTotal：交换空间总大小
SwapFree：空闲交换空间

Dirty：等待被写回到磁盘的大小
Writeback：正在被写回的大小
AnonPages：未映射页的大小
Mapped：设备和文件映射大小
Shmem：已经被分配的共享内存大小
Slab：内核数据结构缓存大小
SReclaimable：可收回slab的大小
SUnreclaim：不可回收的slab的大小
KernelStack：kernel消耗的内存
PageTables：管理内存分页的索引表的大小
NFS_Unstable：不稳定页表的大小
Bounce：在低端内存中分配一个临时buffer作为跳转，把位于高端内存的缓存数据复制到此处消耗的内存
WritevackTmp：FUSE用于临时写回缓冲区的内存
CommitLimit：系统实际可分配内存总量
Committed_AS：统当前已分配的内存总量
VmallocTotal：虚拟内存大小
VmallocUsed：已经被使用的虚拟内存大小
VmallocChunk：vmalloc 可分配的最大的逻辑连续的内存大小
HardwareCorrupted：删除掉的内存页的总大小(当系统检测到内存的硬件故障时)
HugePages ： Linux 操作系统的一个内核特性，让操作系统可以支持现代硬件架构的大页面容量功能
AnonHugePages：匿名 HugePages 数量
CmaTotal：总的连续可用内存
CmaFree：空闲的连续内存
HugePages_Total：预留HugePages的总个数
HugePages_Free：池中尚未分配的 HugePages 数量
HugePages_Rsvd：表示池中已经被应用程序分配但尚未使用的 HugePages 数量
HugePages_Surp：这个值得意思是当开始配置了20个大页，现在修改配置为16，那么这个参数就会显示为4，一般不修改配置，这个值都是0
HugePagesize：每个大页的大小
DirectMap4k：映射TLB为4kB的内存数量
DirectMap2M：映射TLB为2M的内存数量
DirectMap1G：映射TLB为1G的内存数量
